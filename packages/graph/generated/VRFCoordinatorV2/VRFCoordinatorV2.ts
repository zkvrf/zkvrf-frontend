// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ConfigSet extends ethereum.Event {
  get params(): ConfigSet__Params {
    return new ConfigSet__Params(this);
  }
}

export class ConfigSet__Params {
  _event: ConfigSet;

  constructor(event: ConfigSet) {
    this._event = event;
  }

  get minimumRequestConfirmations(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get maxGasLimit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get stalenessSeconds(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get gasAfterPaymentCalculation(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fallbackWeiPerUnitLink(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get feeConfig(): ConfigSetFeeConfigStruct {
    return changetype<ConfigSetFeeConfigStruct>(
      this._event.parameters[5].value.toTuple()
    );
  }
}

export class ConfigSetFeeConfigStruct extends ethereum.Tuple {
  get fulfillmentFlatFeeLinkPPMTier1(): BigInt {
    return this[0].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier2(): BigInt {
    return this[1].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier3(): BigInt {
    return this[2].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier4(): BigInt {
    return this[3].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier5(): BigInt {
    return this[4].toBigInt();
  }

  get reqsForTier2(): i32 {
    return this[5].toI32();
  }

  get reqsForTier3(): i32 {
    return this[6].toI32();
  }

  get reqsForTier4(): i32 {
    return this[7].toI32();
  }

  get reqsForTier5(): i32 {
    return this[8].toI32();
  }
}

export class FundsRecovered extends ethereum.Event {
  get params(): FundsRecovered__Params {
    return new FundsRecovered__Params(this);
  }
}

export class FundsRecovered__Params {
  _event: FundsRecovered;

  constructor(event: FundsRecovered) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferRequested extends ethereum.Event {
  get params(): OwnershipTransferRequested__Params {
    return new OwnershipTransferRequested__Params(this);
  }
}

export class OwnershipTransferRequested__Params {
  _event: OwnershipTransferRequested;

  constructor(event: OwnershipTransferRequested) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProvingKeyDeregistered extends ethereum.Event {
  get params(): ProvingKeyDeregistered__Params {
    return new ProvingKeyDeregistered__Params(this);
  }
}

export class ProvingKeyDeregistered__Params {
  _event: ProvingKeyDeregistered;

  constructor(event: ProvingKeyDeregistered) {
    this._event = event;
  }

  get keyHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oracle(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProvingKeyRegistered extends ethereum.Event {
  get params(): ProvingKeyRegistered__Params {
    return new ProvingKeyRegistered__Params(this);
  }
}

export class ProvingKeyRegistered__Params {
  _event: ProvingKeyRegistered;

  constructor(event: ProvingKeyRegistered) {
    this._event = event;
  }

  get keyHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oracle(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RandomWordsFulfilled extends ethereum.Event {
  get params(): RandomWordsFulfilled__Params {
    return new RandomWordsFulfilled__Params(this);
  }
}

export class RandomWordsFulfilled__Params {
  _event: RandomWordsFulfilled;

  constructor(event: RandomWordsFulfilled) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get outputSeed(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get payment(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get success(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class RandomWordsRequested extends ethereum.Event {
  get params(): RandomWordsRequested__Params {
    return new RandomWordsRequested__Params(this);
  }
}

export class RandomWordsRequested__Params {
  _event: RandomWordsRequested;

  constructor(event: RandomWordsRequested) {
    this._event = event;
  }

  get keyHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get requestId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get preSeed(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get subId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get minimumRequestConfirmations(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get callbackGasLimit(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get numWords(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class SubscriptionCanceled extends ethereum.Event {
  get params(): SubscriptionCanceled__Params {
    return new SubscriptionCanceled__Params(this);
  }
}

export class SubscriptionCanceled__Params {
  _event: SubscriptionCanceled;

  constructor(event: SubscriptionCanceled) {
    this._event = event;
  }

  get subId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubscriptionConsumerAdded extends ethereum.Event {
  get params(): SubscriptionConsumerAdded__Params {
    return new SubscriptionConsumerAdded__Params(this);
  }
}

export class SubscriptionConsumerAdded__Params {
  _event: SubscriptionConsumerAdded;

  constructor(event: SubscriptionConsumerAdded) {
    this._event = event;
  }

  get subId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get consumer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SubscriptionConsumerRemoved extends ethereum.Event {
  get params(): SubscriptionConsumerRemoved__Params {
    return new SubscriptionConsumerRemoved__Params(this);
  }
}

export class SubscriptionConsumerRemoved__Params {
  _event: SubscriptionConsumerRemoved;

  constructor(event: SubscriptionConsumerRemoved) {
    this._event = event;
  }

  get subId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get consumer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SubscriptionCreated extends ethereum.Event {
  get params(): SubscriptionCreated__Params {
    return new SubscriptionCreated__Params(this);
  }
}

export class SubscriptionCreated__Params {
  _event: SubscriptionCreated;

  constructor(event: SubscriptionCreated) {
    this._event = event;
  }

  get subId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SubscriptionFunded extends ethereum.Event {
  get params(): SubscriptionFunded__Params {
    return new SubscriptionFunded__Params(this);
  }
}

export class SubscriptionFunded__Params {
  _event: SubscriptionFunded;

  constructor(event: SubscriptionFunded) {
    this._event = event;
  }

  get subId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SubscriptionOwnerTransferRequested extends ethereum.Event {
  get params(): SubscriptionOwnerTransferRequested__Params {
    return new SubscriptionOwnerTransferRequested__Params(this);
  }
}

export class SubscriptionOwnerTransferRequested__Params {
  _event: SubscriptionOwnerTransferRequested;

  constructor(event: SubscriptionOwnerTransferRequested) {
    this._event = event;
  }

  get subId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SubscriptionOwnerTransferred extends ethereum.Event {
  get params(): SubscriptionOwnerTransferred__Params {
    return new SubscriptionOwnerTransferred__Params(this);
  }
}

export class SubscriptionOwnerTransferred__Params {
  _event: SubscriptionOwnerTransferred;

  constructor(event: SubscriptionOwnerTransferred) {
    this._event = event;
  }

  get subId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class VRFCoordinatorV2__fulfillRandomWordsInputProofStruct extends ethereum.Tuple {
  get pk(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get gamma(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get c(): BigInt {
    return this[2].toBigInt();
  }

  get s(): BigInt {
    return this[3].toBigInt();
  }

  get seed(): BigInt {
    return this[4].toBigInt();
  }

  get uWitness(): Address {
    return this[5].toAddress();
  }

  get cGammaWitness(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get sHashWitness(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get zInv(): BigInt {
    return this[8].toBigInt();
  }
}

export class VRFCoordinatorV2__fulfillRandomWordsInputRcStruct extends ethereum.Tuple {
  get blockNum(): BigInt {
    return this[0].toBigInt();
  }

  get subId(): BigInt {
    return this[1].toBigInt();
  }

  get callbackGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get numWords(): BigInt {
    return this[3].toBigInt();
  }

  get sender(): Address {
    return this[4].toAddress();
  }
}

export class VRFCoordinatorV2__getConfigResult {
  value0: i32;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: i32, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getMinimumRequestConfirmations(): i32 {
    return this.value0;
  }

  getMaxGasLimit(): BigInt {
    return this.value1;
  }

  getStalenessSeconds(): BigInt {
    return this.value2;
  }

  getGasAfterPaymentCalculation(): BigInt {
    return this.value3;
  }
}

export class VRFCoordinatorV2__getFeeConfigResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: i32;
  value6: i32;
  value7: i32;
  value8: i32;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: i32,
    value6: i32,
    value7: i32,
    value8: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set(
      "value6",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value6))
    );
    map.set(
      "value7",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value7))
    );
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8))
    );
    return map;
  }

  getFulfillmentFlatFeeLinkPPMTier1(): BigInt {
    return this.value0;
  }

  getFulfillmentFlatFeeLinkPPMTier2(): BigInt {
    return this.value1;
  }

  getFulfillmentFlatFeeLinkPPMTier3(): BigInt {
    return this.value2;
  }

  getFulfillmentFlatFeeLinkPPMTier4(): BigInt {
    return this.value3;
  }

  getFulfillmentFlatFeeLinkPPMTier5(): BigInt {
    return this.value4;
  }

  getReqsForTier2(): i32 {
    return this.value5;
  }

  getReqsForTier3(): i32 {
    return this.value6;
  }

  getReqsForTier4(): i32 {
    return this.value7;
  }

  getReqsForTier5(): i32 {
    return this.value8;
  }
}

export class VRFCoordinatorV2__getRequestConfigResult {
  value0: i32;
  value1: BigInt;
  value2: Array<Bytes>;

  constructor(value0: i32, value1: BigInt, value2: Array<Bytes>) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytesArray(this.value2));
    return map;
  }

  getValue0(): i32 {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): Array<Bytes> {
    return this.value2;
  }
}

export class VRFCoordinatorV2__getSubscriptionResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: Array<Address>;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: Array<Address>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddressArray(this.value3));
    return map;
  }

  getBalance(): BigInt {
    return this.value0;
  }

  getReqCount(): BigInt {
    return this.value1;
  }

  getOwner(): Address {
    return this.value2;
  }

  getConsumers(): Array<Address> {
    return this.value3;
  }
}

export class VRFCoordinatorV2 extends ethereum.SmartContract {
  static bind(address: Address): VRFCoordinatorV2 {
    return new VRFCoordinatorV2("VRFCoordinatorV2", address);
  }

  BLOCKHASH_STORE(): Address {
    let result = super.call(
      "BLOCKHASH_STORE",
      "BLOCKHASH_STORE():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_BLOCKHASH_STORE(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "BLOCKHASH_STORE",
      "BLOCKHASH_STORE():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  LINK(): Address {
    let result = super.call("LINK", "LINK():(address)", []);

    return result[0].toAddress();
  }

  try_LINK(): ethereum.CallResult<Address> {
    let result = super.tryCall("LINK", "LINK():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  LINK_ETH_FEED(): Address {
    let result = super.call("LINK_ETH_FEED", "LINK_ETH_FEED():(address)", []);

    return result[0].toAddress();
  }

  try_LINK_ETH_FEED(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "LINK_ETH_FEED",
      "LINK_ETH_FEED():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  MAX_CONSUMERS(): i32 {
    let result = super.call("MAX_CONSUMERS", "MAX_CONSUMERS():(uint16)", []);

    return result[0].toI32();
  }

  try_MAX_CONSUMERS(): ethereum.CallResult<i32> {
    let result = super.tryCall("MAX_CONSUMERS", "MAX_CONSUMERS():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  MAX_NUM_WORDS(): BigInt {
    let result = super.call("MAX_NUM_WORDS", "MAX_NUM_WORDS():(uint32)", []);

    return result[0].toBigInt();
  }

  try_MAX_NUM_WORDS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_NUM_WORDS", "MAX_NUM_WORDS():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_REQUEST_CONFIRMATIONS(): i32 {
    let result = super.call(
      "MAX_REQUEST_CONFIRMATIONS",
      "MAX_REQUEST_CONFIRMATIONS():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_MAX_REQUEST_CONFIRMATIONS(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "MAX_REQUEST_CONFIRMATIONS",
      "MAX_REQUEST_CONFIRMATIONS():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  createSubscription(): BigInt {
    let result = super.call(
      "createSubscription",
      "createSubscription():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_createSubscription(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createSubscription",
      "createSubscription():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fulfillRandomWords(
    proof: VRFCoordinatorV2__fulfillRandomWordsInputProofStruct,
    rc: VRFCoordinatorV2__fulfillRandomWordsInputRcStruct
  ): BigInt {
    let result = super.call(
      "fulfillRandomWords",
      "fulfillRandomWords((uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256),(uint64,uint64,uint32,uint32,address)):(uint96)",
      [ethereum.Value.fromTuple(proof), ethereum.Value.fromTuple(rc)]
    );

    return result[0].toBigInt();
  }

  try_fulfillRandomWords(
    proof: VRFCoordinatorV2__fulfillRandomWordsInputProofStruct,
    rc: VRFCoordinatorV2__fulfillRandomWordsInputRcStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fulfillRandomWords",
      "fulfillRandomWords((uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256),(uint64,uint64,uint32,uint32,address)):(uint96)",
      [ethereum.Value.fromTuple(proof), ethereum.Value.fromTuple(rc)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCommitment(requestId: BigInt): Bytes {
    let result = super.call(
      "getCommitment",
      "getCommitment(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(requestId)]
    );

    return result[0].toBytes();
  }

  try_getCommitment(requestId: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getCommitment",
      "getCommitment(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(requestId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getConfig(): VRFCoordinatorV2__getConfigResult {
    let result = super.call(
      "getConfig",
      "getConfig():(uint16,uint32,uint32,uint32)",
      []
    );

    return new VRFCoordinatorV2__getConfigResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getConfig(): ethereum.CallResult<VRFCoordinatorV2__getConfigResult> {
    let result = super.tryCall(
      "getConfig",
      "getConfig():(uint16,uint32,uint32,uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VRFCoordinatorV2__getConfigResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getCurrentSubId(): BigInt {
    let result = super.call(
      "getCurrentSubId",
      "getCurrentSubId():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentSubId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentSubId",
      "getCurrentSubId():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFallbackWeiPerUnitLink(): BigInt {
    let result = super.call(
      "getFallbackWeiPerUnitLink",
      "getFallbackWeiPerUnitLink():(int256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getFallbackWeiPerUnitLink(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFallbackWeiPerUnitLink",
      "getFallbackWeiPerUnitLink():(int256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeConfig(): VRFCoordinatorV2__getFeeConfigResult {
    let result = super.call(
      "getFeeConfig",
      "getFeeConfig():(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24)",
      []
    );

    return new VRFCoordinatorV2__getFeeConfigResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toI32(),
      result[6].toI32(),
      result[7].toI32(),
      result[8].toI32()
    );
  }

  try_getFeeConfig(): ethereum.CallResult<
    VRFCoordinatorV2__getFeeConfigResult
  > {
    let result = super.tryCall(
      "getFeeConfig",
      "getFeeConfig():(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VRFCoordinatorV2__getFeeConfigResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toI32(),
        value[6].toI32(),
        value[7].toI32(),
        value[8].toI32()
      )
    );
  }

  getFeeTier(reqCount: BigInt): BigInt {
    let result = super.call("getFeeTier", "getFeeTier(uint64):(uint32)", [
      ethereum.Value.fromUnsignedBigInt(reqCount)
    ]);

    return result[0].toBigInt();
  }

  try_getFeeTier(reqCount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getFeeTier", "getFeeTier(uint64):(uint32)", [
      ethereum.Value.fromUnsignedBigInt(reqCount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRequestConfig(): VRFCoordinatorV2__getRequestConfigResult {
    let result = super.call(
      "getRequestConfig",
      "getRequestConfig():(uint16,uint32,bytes32[])",
      []
    );

    return new VRFCoordinatorV2__getRequestConfigResult(
      result[0].toI32(),
      result[1].toBigInt(),
      result[2].toBytesArray()
    );
  }

  try_getRequestConfig(): ethereum.CallResult<
    VRFCoordinatorV2__getRequestConfigResult
  > {
    let result = super.tryCall(
      "getRequestConfig",
      "getRequestConfig():(uint16,uint32,bytes32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VRFCoordinatorV2__getRequestConfigResult(
        value[0].toI32(),
        value[1].toBigInt(),
        value[2].toBytesArray()
      )
    );
  }

  getSubscription(subId: BigInt): VRFCoordinatorV2__getSubscriptionResult {
    let result = super.call(
      "getSubscription",
      "getSubscription(uint64):(uint96,uint64,address,address[])",
      [ethereum.Value.fromUnsignedBigInt(subId)]
    );

    return new VRFCoordinatorV2__getSubscriptionResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toAddressArray()
    );
  }

  try_getSubscription(
    subId: BigInt
  ): ethereum.CallResult<VRFCoordinatorV2__getSubscriptionResult> {
    let result = super.tryCall(
      "getSubscription",
      "getSubscription(uint64):(uint96,uint64,address,address[])",
      [ethereum.Value.fromUnsignedBigInt(subId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VRFCoordinatorV2__getSubscriptionResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toAddressArray()
      )
    );
  }

  getTotalBalance(): BigInt {
    let result = super.call(
      "getTotalBalance",
      "getTotalBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTotalBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalBalance",
      "getTotalBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashOfKey(publicKey: Array<BigInt>): Bytes {
    let result = super.call("hashOfKey", "hashOfKey(uint256[2]):(bytes32)", [
      ethereum.Value.fromUnsignedBigIntArray(publicKey)
    ]);

    return result[0].toBytes();
  }

  try_hashOfKey(publicKey: Array<BigInt>): ethereum.CallResult<Bytes> {
    let result = super.tryCall("hashOfKey", "hashOfKey(uint256[2]):(bytes32)", [
      ethereum.Value.fromUnsignedBigIntArray(publicKey)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingRequestExists(subId: BigInt): boolean {
    let result = super.call(
      "pendingRequestExists",
      "pendingRequestExists(uint64):(bool)",
      [ethereum.Value.fromUnsignedBigInt(subId)]
    );

    return result[0].toBoolean();
  }

  try_pendingRequestExists(subId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "pendingRequestExists",
      "pendingRequestExists(uint64):(bool)",
      [ethereum.Value.fromUnsignedBigInt(subId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  requestRandomWords(
    keyHash: Bytes,
    subId: BigInt,
    requestConfirmations: i32,
    callbackGasLimit: BigInt,
    numWords: BigInt
  ): BigInt {
    let result = super.call(
      "requestRandomWords",
      "requestRandomWords(bytes32,uint64,uint16,uint32,uint32):(uint256)",
      [
        ethereum.Value.fromFixedBytes(keyHash),
        ethereum.Value.fromUnsignedBigInt(subId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(requestConfirmations)),
        ethereum.Value.fromUnsignedBigInt(callbackGasLimit),
        ethereum.Value.fromUnsignedBigInt(numWords)
      ]
    );

    return result[0].toBigInt();
  }

  try_requestRandomWords(
    keyHash: Bytes,
    subId: BigInt,
    requestConfirmations: i32,
    callbackGasLimit: BigInt,
    numWords: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "requestRandomWords",
      "requestRandomWords(bytes32,uint64,uint16,uint32,uint32):(uint256)",
      [
        ethereum.Value.fromFixedBytes(keyHash),
        ethereum.Value.fromUnsignedBigInt(subId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(requestConfirmations)),
        ethereum.Value.fromUnsignedBigInt(callbackGasLimit),
        ethereum.Value.fromUnsignedBigInt(numWords)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  typeAndVersion(): string {
    let result = super.call("typeAndVersion", "typeAndVersion():(string)", []);

    return result[0].toString();
  }

  try_typeAndVersion(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "typeAndVersion",
      "typeAndVersion():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get link(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get blockhashStore(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get linkEthFeed(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptSubscriptionOwnerTransferCall extends ethereum.Call {
  get inputs(): AcceptSubscriptionOwnerTransferCall__Inputs {
    return new AcceptSubscriptionOwnerTransferCall__Inputs(this);
  }

  get outputs(): AcceptSubscriptionOwnerTransferCall__Outputs {
    return new AcceptSubscriptionOwnerTransferCall__Outputs(this);
  }
}

export class AcceptSubscriptionOwnerTransferCall__Inputs {
  _call: AcceptSubscriptionOwnerTransferCall;

  constructor(call: AcceptSubscriptionOwnerTransferCall) {
    this._call = call;
  }

  get subId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptSubscriptionOwnerTransferCall__Outputs {
  _call: AcceptSubscriptionOwnerTransferCall;

  constructor(call: AcceptSubscriptionOwnerTransferCall) {
    this._call = call;
  }
}

export class AddConsumerCall extends ethereum.Call {
  get inputs(): AddConsumerCall__Inputs {
    return new AddConsumerCall__Inputs(this);
  }

  get outputs(): AddConsumerCall__Outputs {
    return new AddConsumerCall__Outputs(this);
  }
}

export class AddConsumerCall__Inputs {
  _call: AddConsumerCall;

  constructor(call: AddConsumerCall) {
    this._call = call;
  }

  get subId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get consumer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddConsumerCall__Outputs {
  _call: AddConsumerCall;

  constructor(call: AddConsumerCall) {
    this._call = call;
  }
}

export class CancelSubscriptionCall extends ethereum.Call {
  get inputs(): CancelSubscriptionCall__Inputs {
    return new CancelSubscriptionCall__Inputs(this);
  }

  get outputs(): CancelSubscriptionCall__Outputs {
    return new CancelSubscriptionCall__Outputs(this);
  }
}

export class CancelSubscriptionCall__Inputs {
  _call: CancelSubscriptionCall;

  constructor(call: CancelSubscriptionCall) {
    this._call = call;
  }

  get subId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CancelSubscriptionCall__Outputs {
  _call: CancelSubscriptionCall;

  constructor(call: CancelSubscriptionCall) {
    this._call = call;
  }
}

export class CreateSubscriptionCall extends ethereum.Call {
  get inputs(): CreateSubscriptionCall__Inputs {
    return new CreateSubscriptionCall__Inputs(this);
  }

  get outputs(): CreateSubscriptionCall__Outputs {
    return new CreateSubscriptionCall__Outputs(this);
  }
}

export class CreateSubscriptionCall__Inputs {
  _call: CreateSubscriptionCall;

  constructor(call: CreateSubscriptionCall) {
    this._call = call;
  }
}

export class CreateSubscriptionCall__Outputs {
  _call: CreateSubscriptionCall;

  constructor(call: CreateSubscriptionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DeregisterProvingKeyCall extends ethereum.Call {
  get inputs(): DeregisterProvingKeyCall__Inputs {
    return new DeregisterProvingKeyCall__Inputs(this);
  }

  get outputs(): DeregisterProvingKeyCall__Outputs {
    return new DeregisterProvingKeyCall__Outputs(this);
  }
}

export class DeregisterProvingKeyCall__Inputs {
  _call: DeregisterProvingKeyCall;

  constructor(call: DeregisterProvingKeyCall) {
    this._call = call;
  }

  get publicProvingKey(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class DeregisterProvingKeyCall__Outputs {
  _call: DeregisterProvingKeyCall;

  constructor(call: DeregisterProvingKeyCall) {
    this._call = call;
  }
}

export class FulfillRandomWordsCall extends ethereum.Call {
  get inputs(): FulfillRandomWordsCall__Inputs {
    return new FulfillRandomWordsCall__Inputs(this);
  }

  get outputs(): FulfillRandomWordsCall__Outputs {
    return new FulfillRandomWordsCall__Outputs(this);
  }
}

export class FulfillRandomWordsCall__Inputs {
  _call: FulfillRandomWordsCall;

  constructor(call: FulfillRandomWordsCall) {
    this._call = call;
  }

  get proof(): FulfillRandomWordsCallProofStruct {
    return changetype<FulfillRandomWordsCallProofStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get rc(): FulfillRandomWordsCallRcStruct {
    return changetype<FulfillRandomWordsCallRcStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class FulfillRandomWordsCall__Outputs {
  _call: FulfillRandomWordsCall;

  constructor(call: FulfillRandomWordsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class FulfillRandomWordsCallProofStruct extends ethereum.Tuple {
  get pk(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get gamma(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get c(): BigInt {
    return this[2].toBigInt();
  }

  get s(): BigInt {
    return this[3].toBigInt();
  }

  get seed(): BigInt {
    return this[4].toBigInt();
  }

  get uWitness(): Address {
    return this[5].toAddress();
  }

  get cGammaWitness(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get sHashWitness(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get zInv(): BigInt {
    return this[8].toBigInt();
  }
}

export class FulfillRandomWordsCallRcStruct extends ethereum.Tuple {
  get blockNum(): BigInt {
    return this[0].toBigInt();
  }

  get subId(): BigInt {
    return this[1].toBigInt();
  }

  get callbackGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get numWords(): BigInt {
    return this[3].toBigInt();
  }

  get sender(): Address {
    return this[4].toAddress();
  }
}

export class OnTokenTransferCall extends ethereum.Call {
  get inputs(): OnTokenTransferCall__Inputs {
    return new OnTokenTransferCall__Inputs(this);
  }

  get outputs(): OnTokenTransferCall__Outputs {
    return new OnTokenTransferCall__Outputs(this);
  }
}

export class OnTokenTransferCall__Inputs {
  _call: OnTokenTransferCall;

  constructor(call: OnTokenTransferCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class OnTokenTransferCall__Outputs {
  _call: OnTokenTransferCall;

  constructor(call: OnTokenTransferCall) {
    this._call = call;
  }
}

export class OracleWithdrawCall extends ethereum.Call {
  get inputs(): OracleWithdrawCall__Inputs {
    return new OracleWithdrawCall__Inputs(this);
  }

  get outputs(): OracleWithdrawCall__Outputs {
    return new OracleWithdrawCall__Outputs(this);
  }
}

export class OracleWithdrawCall__Inputs {
  _call: OracleWithdrawCall;

  constructor(call: OracleWithdrawCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class OracleWithdrawCall__Outputs {
  _call: OracleWithdrawCall;

  constructor(call: OracleWithdrawCall) {
    this._call = call;
  }
}

export class OwnerCancelSubscriptionCall extends ethereum.Call {
  get inputs(): OwnerCancelSubscriptionCall__Inputs {
    return new OwnerCancelSubscriptionCall__Inputs(this);
  }

  get outputs(): OwnerCancelSubscriptionCall__Outputs {
    return new OwnerCancelSubscriptionCall__Outputs(this);
  }
}

export class OwnerCancelSubscriptionCall__Inputs {
  _call: OwnerCancelSubscriptionCall;

  constructor(call: OwnerCancelSubscriptionCall) {
    this._call = call;
  }

  get subId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OwnerCancelSubscriptionCall__Outputs {
  _call: OwnerCancelSubscriptionCall;

  constructor(call: OwnerCancelSubscriptionCall) {
    this._call = call;
  }
}

export class RecoverFundsCall extends ethereum.Call {
  get inputs(): RecoverFundsCall__Inputs {
    return new RecoverFundsCall__Inputs(this);
  }

  get outputs(): RecoverFundsCall__Outputs {
    return new RecoverFundsCall__Outputs(this);
  }
}

export class RecoverFundsCall__Inputs {
  _call: RecoverFundsCall;

  constructor(call: RecoverFundsCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecoverFundsCall__Outputs {
  _call: RecoverFundsCall;

  constructor(call: RecoverFundsCall) {
    this._call = call;
  }
}

export class RegisterProvingKeyCall extends ethereum.Call {
  get inputs(): RegisterProvingKeyCall__Inputs {
    return new RegisterProvingKeyCall__Inputs(this);
  }

  get outputs(): RegisterProvingKeyCall__Outputs {
    return new RegisterProvingKeyCall__Outputs(this);
  }
}

export class RegisterProvingKeyCall__Inputs {
  _call: RegisterProvingKeyCall;

  constructor(call: RegisterProvingKeyCall) {
    this._call = call;
  }

  get oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get publicProvingKey(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RegisterProvingKeyCall__Outputs {
  _call: RegisterProvingKeyCall;

  constructor(call: RegisterProvingKeyCall) {
    this._call = call;
  }
}

export class RemoveConsumerCall extends ethereum.Call {
  get inputs(): RemoveConsumerCall__Inputs {
    return new RemoveConsumerCall__Inputs(this);
  }

  get outputs(): RemoveConsumerCall__Outputs {
    return new RemoveConsumerCall__Outputs(this);
  }
}

export class RemoveConsumerCall__Inputs {
  _call: RemoveConsumerCall;

  constructor(call: RemoveConsumerCall) {
    this._call = call;
  }

  get subId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get consumer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveConsumerCall__Outputs {
  _call: RemoveConsumerCall;

  constructor(call: RemoveConsumerCall) {
    this._call = call;
  }
}

export class RequestRandomWordsCall extends ethereum.Call {
  get inputs(): RequestRandomWordsCall__Inputs {
    return new RequestRandomWordsCall__Inputs(this);
  }

  get outputs(): RequestRandomWordsCall__Outputs {
    return new RequestRandomWordsCall__Outputs(this);
  }
}

export class RequestRandomWordsCall__Inputs {
  _call: RequestRandomWordsCall;

  constructor(call: RequestRandomWordsCall) {
    this._call = call;
  }

  get keyHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get subId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get requestConfirmations(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get callbackGasLimit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get numWords(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class RequestRandomWordsCall__Outputs {
  _call: RequestRandomWordsCall;

  constructor(call: RequestRandomWordsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RequestSubscriptionOwnerTransferCall extends ethereum.Call {
  get inputs(): RequestSubscriptionOwnerTransferCall__Inputs {
    return new RequestSubscriptionOwnerTransferCall__Inputs(this);
  }

  get outputs(): RequestSubscriptionOwnerTransferCall__Outputs {
    return new RequestSubscriptionOwnerTransferCall__Outputs(this);
  }
}

export class RequestSubscriptionOwnerTransferCall__Inputs {
  _call: RequestSubscriptionOwnerTransferCall;

  constructor(call: RequestSubscriptionOwnerTransferCall) {
    this._call = call;
  }

  get subId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RequestSubscriptionOwnerTransferCall__Outputs {
  _call: RequestSubscriptionOwnerTransferCall;

  constructor(call: RequestSubscriptionOwnerTransferCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get minimumRequestConfirmations(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get maxGasLimit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get stalenessSeconds(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get gasAfterPaymentCalculation(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get fallbackWeiPerUnitLink(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get feeConfig(): SetConfigCallFeeConfigStruct {
    return changetype<SetConfigCallFeeConfigStruct>(
      this._call.inputValues[5].value.toTuple()
    );
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class SetConfigCallFeeConfigStruct extends ethereum.Tuple {
  get fulfillmentFlatFeeLinkPPMTier1(): BigInt {
    return this[0].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier2(): BigInt {
    return this[1].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier3(): BigInt {
    return this[2].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier4(): BigInt {
    return this[3].toBigInt();
  }

  get fulfillmentFlatFeeLinkPPMTier5(): BigInt {
    return this[4].toBigInt();
  }

  get reqsForTier2(): i32 {
    return this[5].toI32();
  }

  get reqsForTier3(): i32 {
    return this[6].toI32();
  }

  get reqsForTier4(): i32 {
    return this[7].toI32();
  }

  get reqsForTier5(): i32 {
    return this[8].toI32();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
